{"version":3,"sources":["store/actions.ts","hooks/useInterval.ts","components/QuoteContainer.tsx","icons/UnsureEmoji.tsx","components/Loading.tsx","icons/SadEmoji.tsx","components/Error.tsx","api/quotes.ts","store/reducer.ts","store/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Actions","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","QuoteContainer","quote","typed","isTyping","useState","x","y","caretPos","setCaretPos","curCharacterRef","containerRef","opacity","setOpacity","containerPos","getBoundingClientRect","curCharacterPos","prev","ref","className","slice","length","split","map","l","i","style","transform","UnsureEmoji","xmlSpace","viewBox","xmlns","version","width","height","xmlnsXlink","animationPlayState","transformOrigin","y2","x2","y1","x1","gradientUnits","stopColor","offset","fill","r","cy","cx","d","strokeMiterlimit","strokeLinecap","strokeWidth","stroke","Loading","AwkwardEmoji","Error","SadEmoji","getNewQuote","a","fetch","req","ok","json","data","quoteText","Status","initialState","status","loading","errors","time","curErrors","refresh","dispatch","type","start","success","payload","fail","reducer","state","action","error","ready","finish","finished","commit","tick","useAppState","useReducer","App","stats","timeUpdater","setTimeUpdater","buttonRef","textareaRef","setIsTyping","speed","Math","round","trim","accuracy","icon","SpeedIcon","value","isFinite","mark","AccuracyIcon","TimeIcon","ErrorsIcon","buttonEl","refreshHanlder","e","keyCode","click","document","addEventListener","removeEventListener","textareaEl","focus","timeout","setTimeout","clearTimeout","index","Icon","size","disabled","Boolean","onClick","onChange","target","reduce","acc","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.81a0fe93.chunk.js","sourcesContent":["enum Actions {\r\n  start,\r\n  success,\r\n  fail,\r\n  finish,\r\n  type,\r\n  commit,\r\n  tick,\r\n}\r\n\r\nexport default Actions;\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\nconst useInterval = (callback: () => void, delay: number) => {\r\n\tconst savedCallback = useRef<() => void>();\r\n\r\n\t// Remember the latest callback.\r\n\tuseEffect(() => {\r\n\t\tsavedCallback.current = callback;\r\n\t}, [callback]);\r\n\r\n\t// Set up the interval.\r\n\tuseEffect(() => {\r\n\t\tconst tick = () => {\r\n\t\t\tsavedCallback.current && savedCallback.current();\r\n\t\t};\r\n\t\tif (delay !== null) {\r\n\t\t\tlet id = setInterval(tick, delay);\r\n\t\t\treturn () => clearInterval(id);\r\n\t\t}\r\n\t}, [delay]);\r\n};\r\n\r\nexport default useInterval;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport useInterval from '../hooks/useInterval';\r\n\r\ninterface QuoteContainerProps {\r\n\tquote: string;\r\n\ttyped: string;\r\n\tisTyping: boolean;\r\n}\r\n\r\nconst QuoteContainer: React.FC<QuoteContainerProps> = ({\r\n\tquote,\r\n\ttyped,\r\n\tisTyping,\r\n}) => {\r\n\tconst [caretPos, setCaretPos] = useState({ x: 8, y: 10.5 });\r\n\tconst curCharacterRef = useRef<HTMLSpanElement>(null);\r\n\tconst containerRef = useRef<HTMLParagraphElement>(null);\r\n\tconst [opacity, setOpacity] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst containerPos = containerRef.current!.getBoundingClientRect();\r\n\t\tconst curCharacterPos = curCharacterRef.current!.getBoundingClientRect();\r\n\r\n\t\tsetCaretPos({\r\n\t\t\tx: curCharacterPos.x - containerPos.x,\r\n\t\t\ty: curCharacterPos.y - containerPos.y,\r\n\t\t});\r\n\t}, [typed]);\r\n\r\n\tuseInterval(() => {\r\n\t\tif (isTyping) {\r\n\t\t\tsetOpacity(1);\r\n\t\t} else {\r\n\t\t\tsetOpacity(prev => (prev === 1 ? 0 : 1));\r\n\t\t}\r\n\t}, 500);\r\n\r\n\treturn (\r\n\t\t<p ref={containerRef} className=\"relative text-gray-400 p-2 select-none\">\r\n\t\t\t<span className=\"text-gray-700 select-text\">\r\n\t\t\t\t{quote\r\n\t\t\t\t\t.slice(0, typed.length)\r\n\t\t\t\t\t.split('')\r\n\t\t\t\t\t.map((l, i) =>\r\n\t\t\t\t\t\tl === typed[i] ? (\r\n\t\t\t\t\t\t\tl\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<span key={i} className=\"text-red-500 border-b-2 border-red-500\">\r\n\t\t\t\t\t\t\t\t{l}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t)}\r\n\t\t\t</span>\r\n\t\t\t<span ref={curCharacterRef}>{quote[typed.length]}</span>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"caret\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttransform: `translate3d(${caretPos.x}px, ${caretPos.y}px, 0)`,\r\n\t\t\t\t\topacity,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{quote.slice(typed.length + 1)}\r\n\t\t</p>\r\n\t);\r\n};\r\n\r\nexport default QuoteContainer;\r\n","import React from 'react';\r\n\r\nconst UnsureEmoji = () => {\r\n  return (\r\n    <svg\r\n      xmlSpace=\"preserve\"\r\n      viewBox=\"0 0 100 100\"\r\n      y={0}\r\n      x={0}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      id=\"Layer_1\"\r\n      version=\"1.1\"\r\n      width=\"125px\"\r\n      height=\"125px\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      style={{ width: '100%', height: '100%', animationPlayState: 'paused' }}\r\n    >\r\n      <g\r\n        className=\"ldl-scale\"\r\n        style={{\r\n          transformOrigin: '50% 50% 0px',\r\n          transform: 'rotate(0deg) scale(1)',\r\n          animationPlayState: 'paused',\r\n        }}\r\n      >\r\n        <linearGradient\r\n          y2={77}\r\n          x2={50}\r\n          y1={20}\r\n          x1={50}\r\n          gradientUnits=\"userSpaceOnUse\"\r\n          id=\"SVGID_1_\"\r\n          style={{ animationPlayState: 'paused' }}\r\n        >\r\n          <stop\r\n            stopColor=\"#f4e6c8\"\r\n            offset={0}\r\n            style={{\r\n              stopColor: 'rgb(244, 230, 200)',\r\n              animationPlayState: 'paused',\r\n            }}\r\n          />\r\n          <stop\r\n            stopColor=\"#f5e169\"\r\n            offset={1}\r\n            style={{\r\n              stopColor: 'rgb(245, 225, 105)',\r\n              animationPlayState: 'paused',\r\n            }}\r\n          />\r\n        </linearGradient>\r\n        <circle\r\n          fill=\"url(#SVGID_1_)\"\r\n          r={40}\r\n          cy={50}\r\n          cx={50}\r\n          style={{ animationPlayState: 'paused' }}\r\n        />\r\n        <circle\r\n          fill=\"#4a3826\"\r\n          r=\"7.5\"\r\n          cy=\"38.409\"\r\n          cx=\"33.5\"\r\n          style={{ fill: 'rgb(74, 56, 38)', animationPlayState: 'paused' }}\r\n        />\r\n        <circle\r\n          fill=\"#4a3826\"\r\n          r=\"7.5\"\r\n          cy=\"38.409\"\r\n          cx=\"66.5\"\r\n          style={{ fill: 'rgb(74, 56, 38)', animationPlayState: 'paused' }}\r\n        />\r\n        <path\r\n          d=\"M33 65.091h34\"\r\n          strokeMiterlimit={10}\r\n          strokeLinecap=\"round\"\r\n          strokeWidth={5}\r\n          stroke=\"#4a3826\"\r\n          fill=\"none\"\r\n          style={{ stroke: 'rgb(74, 56, 38)', animationPlayState: 'paused' }}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default UnsureEmoji;\r\n","import React from 'react';\r\nimport UnsureEmoji from '../icons/UnsureEmoji';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"flex flex-col items-center w-max m-auto \">\r\n      <UnsureEmoji />\r\n      <h2 className=\"mb-2\">Loading...</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\n\r\nconst AwkwardEmoji = () => {\r\n  return (\r\n    <svg\r\n      xmlSpace=\"preserve\"\r\n      viewBox=\"0 0 100 100\"\r\n      y={0}\r\n      x={0}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      id=\"Layer_1\"\r\n      version=\"1.1\"\r\n      width=\"125px\"\r\n      height=\"125px\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      style={{ width: '100%', height: '100%', animationPlayState: 'paused' }}\r\n    >\r\n      <g\r\n        className=\"ldl-scale\"\r\n        style={{\r\n          transformOrigin: '50% 50% 0px',\r\n          transform: 'rotate(0deg) scale(1)',\r\n          animationPlayState: 'paused',\r\n        }}\r\n      >\r\n        <linearGradient\r\n          y2={77}\r\n          x2={50}\r\n          y1={20}\r\n          x1={50}\r\n          gradientUnits=\"userSpaceOnUse\"\r\n          id=\"SVGID_1_\"\r\n          style={{ animationPlayState: 'paused' }}\r\n        >\r\n          <stop\r\n            stopColor=\"#f4e6c8\"\r\n            offset={0}\r\n            style={{\r\n              stopColor: 'rgb(244, 230, 200)',\r\n              animationPlayState: 'paused',\r\n            }}\r\n          />\r\n          <stop\r\n            stopColor=\"#f5e169\"\r\n            offset={1}\r\n            style={{\r\n              stopColor: 'rgb(245, 225, 105)',\r\n              animationPlayState: 'paused',\r\n            }}\r\n          />\r\n        </linearGradient>\r\n        <circle\r\n          fill=\"url(#SVGID_1_)\"\r\n          r={40}\r\n          cy={50}\r\n          cx={50}\r\n          style={{ animationPlayState: 'paused' }}\r\n        />\r\n        <circle\r\n          fill=\"#4a3826\"\r\n          r=\"7.5\"\r\n          cy=\"38.409\"\r\n          cx=\"33.5\"\r\n          style={{ fill: 'rgb(74, 56, 38)', animationPlayState: 'paused' }}\r\n        />\r\n        <circle\r\n          fill=\"#4a3826\"\r\n          r=\"7.5\"\r\n          cy=\"38.409\"\r\n          cx=\"66.5\"\r\n          style={{ fill: 'rgb(74, 56, 38)', animationPlayState: 'paused' }}\r\n        />\r\n        <path\r\n          d=\"M33 65.091h34\"\r\n          strokeMiterlimit={10}\r\n          strokeLinecap=\"round\"\r\n          strokeWidth={5}\r\n          stroke=\"#4a3826\"\r\n          fill=\"none\"\r\n          style={{ stroke: 'rgb(74, 56, 38)', animationPlayState: 'paused' }}\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default AwkwardEmoji;\r\n","import React from 'react';\r\nimport SadEmoji from '../icons/SadEmoji';\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div className=\"flex flex-col items-center w-max m-auto \">\r\n      <SadEmoji />\r\n      <h2 className=\"mb-2\">Loading...</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","export const getNewQuote = async () => {\r\n  const req = await fetch(\r\n    'https://quote-garden.herokuapp.com/api/v3/quotes/random',\r\n  );\r\n\r\n  if (!req.ok) throw new Error();\r\n\r\n  const data = await req.json();\r\n\r\n  return data.data[0].quoteText;\r\n};\r\n","import { getNewQuote } from '../api/quotes';\r\nimport Actions from './actions';\r\n\r\nexport enum Status {\r\n  loading,\r\n  error,\r\n  ready,\r\n  finished,\r\n}\r\n\r\ninterface EmptyStateType {\r\n  status: Status.loading | Status.error;\r\n  quote: null;\r\n  typed: null;\r\n  errors: 0;\r\n  time: 0;\r\n  curErrors: 0;\r\n}\r\n\r\ninterface FilledStateType {\r\n  status: Status.ready | Status.finished;\r\n  quote: string;\r\n  typed: string;\r\n  errors: number;\r\n  time: number;\r\n  curErrors: number;\r\n}\r\ntype StateType = EmptyStateType | FilledStateType;\r\n\r\ntype ActionType =\r\n  | { type: Actions.start }\r\n  | { type: Actions.fail }\r\n  | { type: Actions.success; payload: string }\r\n  | { type: Actions.finish }\r\n  | { type: Actions.type; payload: { curErrors: number; typed: string } }\r\n  | { type: Actions.tick }\r\n  | { type: Actions.commit };\r\n\r\nexport const initialState: StateType = {\r\n  status: Status.loading,\r\n  quote: null,\r\n  typed: null,\r\n  errors: 0,\r\n  time: 0,\r\n  curErrors: 0,\r\n};\r\n\r\nconst reducer = (state: StateType, action: ActionType): StateType => {\r\n  if (action.type === Actions.start)\r\n    return {\r\n      status: Status.loading,\r\n      quote: null,\r\n      typed: null,\r\n      errors: 0,\r\n      time: 0,\r\n      curErrors: 0,\r\n    };\r\n\r\n  if (action.type === Actions.fail)\r\n    return {\r\n      status: Status.error,\r\n      quote: null,\r\n      typed: null,\r\n      errors: 0,\r\n      time: 0,\r\n      curErrors: 0,\r\n    };\r\n\r\n  if (action.type === Actions.success)\r\n    return {\r\n      status: Status.ready,\r\n      quote: action.payload,\r\n      typed: '',\r\n      errors: 0,\r\n      time: 0,\r\n      curErrors: 0,\r\n    };\r\n\r\n  if (action.type === Actions.finish)\r\n    return {\r\n      status: Status.finished,\r\n      quote: state.quote as string,\r\n      typed: state.typed as string,\r\n      errors: state.errors,\r\n      time: state.time,\r\n      curErrors: state.curErrors,\r\n    };\r\n\r\n  if (action.type === Actions.type)\r\n    return {\r\n      status: Status.ready,\r\n      quote: state.quote as string,\r\n      typed: action.payload.typed,\r\n      errors: state.errors,\r\n      time: state.time,\r\n      curErrors: action.payload.curErrors,\r\n    };\r\n\r\n  if (action.type === Actions.commit)\r\n    return {\r\n      status: Status.ready,\r\n      quote: state.quote as string,\r\n      typed: state.typed as string,\r\n      errors: state.errors + 1,\r\n      time: state.time,\r\n      curErrors: state.curErrors,\r\n    };\r\n\r\n  if (action.type === Actions.tick)\r\n    return {\r\n      status: Status.ready,\r\n      quote: state.quote as string,\r\n      typed: state.typed as string,\r\n      errors: state.errors,\r\n      time: state.time + 0.1,\r\n      curErrors: state.curErrors,\r\n    };\r\n\r\n  return state;\r\n};\r\n\r\nexport const refresh = async (dispatch: React.Dispatch<ActionType>) => {\r\n  dispatch({ type: Actions.start });\r\n\r\n  try {\r\n    const quote = await getNewQuote();\r\n\r\n    dispatch({ type: Actions.success, payload: quote });\r\n  } catch (err) {\r\n    dispatch({ type: Actions.fail });\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { useReducer } from 'react';\r\nimport reducer, { initialState } from './reducer';\r\n\r\nconst useAppState = () => {\r\n  return useReducer(reducer, initialState);\r\n};\r\n\r\nexport default useAppState;\r\n","import React, { useEffect, useRef, useState } from 'react';\nimport QuoteContainer from './components/QuoteContainer';\nimport {\n  IoAlarmOutline as TimeIcon,\n  IoSpeedometerOutline as SpeedIcon,\n  IoLocateOutline as AccuracyIcon,\n  IoCloseCircleOutline as ErrorsIcon,\n  IoRefreshOutline as RefreshIcon,\n} from 'react-icons/io5';\nimport LoadingCard from './components/Loading';\nimport ErrorCard from './components/Error';\nimport { IconType } from 'react-icons';\nimport useAppState from './store';\nimport { refresh, Status } from './store/reducer';\nimport Actions from './store/actions';\n\ninterface Stats {\n  icon: IconType;\n  value: number;\n  mark: string;\n}\n\nfunction App() {\n  const [state, dispatch] = useAppState();\n  const [timeUpdater, setTimeUpdater] = useState<NodeJS.Timer | null>(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const [isTyping, setIsTyping] = useState(false);\n\n  // calculate stats\n  let stats: Stats[];\n\n  if (state.status === Status.ready || state.status === Status.finished) {\n    const speed = Math.round(\n      (state.typed.trim().length - state.curErrors) / 5 / (state.time / 60),\n    );\n    const accuracy =\n      Math.round(\n        100 -\n          (state.errors / (state.typed.trim().length - state.errors || 1)) *\n            100,\n      ) || 0;\n\n    stats = [\n      {\n        icon: SpeedIcon,\n        value: (isFinite(speed) && speed) || 0,\n        mark: 'WPM',\n      },\n      {\n        icon: AccuracyIcon,\n        value: accuracy,\n        mark: '%',\n      },\n      { icon: TimeIcon, value: Math.round(state.time), mark: 'Sec' },\n      { icon: ErrorsIcon, value: state.errors, mark: 'Char' },\n    ];\n  }\n\n  // start\n  useEffect(() => {\n    refresh(dispatch);\n  }, []);\n\n  // start timer\n  useEffect(() => {\n    if (state.typed && !timeUpdater) {\n      setTimeUpdater(setInterval(() => dispatch({ type: Actions.tick }), 100));\n    }\n  }, [state.typed]);\n\n  // stop timer\n  useEffect(() => {\n    if (state.status === Status.finished && timeUpdater) {\n      clearInterval(timeUpdater);\n      setTimeUpdater(null);\n    }\n  }, [state.status]);\n\n  // add an event lisetner on the return button to refresh\n  useEffect(() => {\n    const buttonEl = buttonRef.current!;\n\n    const refreshHanlder = (e: KeyboardEvent) => {\n      if (e.keyCode === 13) buttonEl.click();\n    };\n\n    document.addEventListener('keydown', refreshHanlder);\n\n    return () => {\n      document.removeEventListener('keydown', refreshHanlder);\n    };\n  }, []);\n\n  // textarea auto focus\n  useEffect(() => {\n    const textareaEl = textareaRef.current!;\n\n    if (state.quote) textareaEl.focus();\n  }, [state.quote]);\n\n  // button auto focus\n  useEffect(() => {\n    const buttonEl = buttonRef.current!;\n\n    if (state.status === Status.finished) buttonEl.focus();\n  }, [state.status]);\n\n  // updating is typing state\n  useEffect(() => {\n    if (state.typed !== null) {\n      setIsTyping(true);\n\n      const timeout = setTimeout(() => setIsTyping(false), 500);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [state.typed]);\n\n  return (\n    <div className=\"w-full max-w-screen-sm space-y-4 p-4 mx-auto mt-6\">\n      <main className=\"w-full rounded-md rounded-b-none border-b border-blue-500 bg-blue-50\">\n        {(state.status === Status.ready ||\n          state.status === Status.finished) && (\n          <QuoteContainer\n            quote={state.quote}\n            typed={state.typed}\n            isTyping={isTyping}\n          />\n        )}\n        {state.status === Status.loading && <LoadingCard />}\n        {state.status === Status.error && <ErrorCard />}\n      </main>\n\n      {(state.status === Status.ready || state.status === Status.finished) && (\n        <div className=\"flex space-x-4 w-max mx-auto\">\n          {stats!.map(({ icon: Icon, value, mark }, index) => (\n            <div\n              key={index}\n              className=\"flex space-x-1 items-center text-gray-700\"\n            >\n              <Icon size={30} />\n              <span className=\"text-md font-semibold\">\n                {value} {mark}\n              </span>\n            </div>\n          ))}\n        </div>\n      )}\n\n      <button\n        className=\"btn w-max mx-auto\"\n        disabled={\n          state.status === Status.loading ||\n          Boolean(state.status === Status.ready && state.typed)\n        }\n        onClick={() => {\n          refresh(dispatch);\n        }}\n        ref={buttonRef}\n      >\n        <RefreshIcon size={24} />\n        <span>Refresh</span>\n      </button>\n\n      <textarea\n        id=\"input\"\n        className=\"w-full rounded-md rounded-t-none border-t border-gray-400 bg-blue-50 resize-none h-40 text-gray-700 p-2 focus:outline-none\n      hover:border-blue-500 focus:border-blue-500 disabled:bg-gray-100 disabled:border-gray-500 disabled:cursor-not-allowed\"\n        disabled={state.status !== Status.ready}\n        value={\n          state.status === Status.ready || state.status === Status.finished\n            ? state.typed\n            : ''\n        }\n        onChange={e => {\n          if (state.status === Status.ready) {\n            const value = e.target.value;\n\n            if (\n              value.length > state.typed.length &&\n              value[value.length - 1] !== state.quote[value.length - 1]\n            ) {\n              dispatch({ type: Actions.commit });\n            }\n\n            dispatch({\n              type: Actions.type,\n              payload: {\n                typed: value,\n                curErrors: state.typed\n                  .split('')\n                  .reduce(\n                    (acc, l, i) => (l === state.quote[i] ? acc : acc + 1),\n                    0,\n                  ),\n              },\n            });\n\n            if (value.length === state.quote.length)\n              dispatch({ type: Actions.finish });\n          }\n        }}\n        ref={textareaRef}\n      ></textarea>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}